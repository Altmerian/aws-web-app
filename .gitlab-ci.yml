# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/README.html#stages

stages:          # List of stages for jobs, and their order of execution
  - test
  - build
  - deploy

unit-tests:   # This job runs in the test stage.
  stage: test
  script:
  - echo "Running unit tests..."
  - chmod +x gradlew
  - ./gradlew clean test

build:       # This job runs in the build stage.
  stage: build   # It only starts when the job in the test stage completes successfully.
  script:
  - chmod +x gradlew
  - ./gradlew build
  artifacts:
    paths:
    - /build/libs/aws-app-0.0.1-SNAPSHOT.jar


upload to s3:      # This job runs in the deploy stage.
  stage: deploy
  image:
    name: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
  - echo "Deploying application..."
  - aws configure set region $AWS_DEFAULT_REGION
  - aws s3 cp /build/libs/aws-app-0.0.1-SNAPSHOT.jar s3://$S3_BUCKET/aws-app.jar
  - echo "Application successfully deployed."
  only:
  - master

